openapi: 3.0.0
info:
  description: |
    Manage all process about BokyLog
  version: '1.0.0'
  title: BokyLog
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/innoBoky/bokyLog/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: http://107.21.130.194:3000
tags:
  - name: Operators
    description: Everything about the employees that are operators
  - name: Auth
    description: Get acces token and basic information
  - name: Roles
    description: All needed to manage the rols model
  - name: Notifications
    description: Manage all about notifications
  - name: Dashboard
    description: Information for dashboard
  - name: Users
    description: All data about app's users
  - name: Clients
    description: All information about the clients of a specific company
  - name: Zones
    description: Areas or zones where the company divides its client's location
  - name: States
    description: States about the taks that a operator does
  - name: Work Flows
    description: All information about the work flow defined by the company
paths:
  /countries/{isoCountry}/cities:
    get:
      tags:
        - Countries
      summary: Get all cities by a iso's country cod
      operationId: citiesBycountry
      parameters:
        - name: isoCountry
          in: path
          description: Iso country code
          required: true
          schema:
            type: string
            minLength: 2
            maxLength: 2
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        city: 
                          type: string
                        zone:
                          type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
  /countries/:
    get:
      tags:
        - Countries
      summary: Get all countries
      operationId: getCountries
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        isoCod:
                          type: string
                        name:
                          type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
  /operators/{operatorId}/workOrders:
    get:
      tags:
        - Operators
      summary: Finds work orders by operator
      description: All work orders that the employee has asigned
      operationId: workOrdersByOperator
      parameters:
        - name: operatorId
          in: path
          description: Operator's id, unique for all system
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        # acl:
                        #   type: array
                        #   items:
                        #     $ref: '#/components/schemas/Acl'
                        trackInformation:
                          $ref: '#/components/schemas/TrackInformation'
                        ots:
                          type: array
                          items:
                            $ref: '#/components/schemas/WorkOrder'
                        forms:
                          type: array
                          items:
                            $ref: '#/components/schemas/Forms'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /users/login:
    post:
      tags:
        - Auth
      summary: Approve user and return basic user's data
      description: Give acces to app and return basic user's information
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  maxLength: 50
                password:
                  type: string
                  format: password
        description: Login to system
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    properties:
                      token:
                        type: string
                      refresh-token:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
  /users/refreshToken:
    post:
      tags:
        - Auth
      summary: Refresh acces token
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh-token:
                  type: string
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    properties:
                      token:
                        type: string
                      refresh-token:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/LoginRequired'
  /forms:
    post:
      tags:
        - Forms
      summary: Create new forms
      description: Create all forms that the system use
      operationId: formsCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Forms'
        description: Create a form
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Forms'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '407':
          $ref: '#/components/responses/TokenExpired'
    get:
      tags:
        - Forms
      summary: All forms
      description: Get all forms
      operationId: FormGetAll
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        state:
                          type: boolean
        '404':
          $ref: '#/components/responses/Unauthorized'
  /forms/{formId}:
    get:
      tags:
        - Forms
      summary: Form by id
      description: Get an specific form
      operationId: FormById
      parameters:
        - name: formId
          in: path
          description: Form id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Forms'
        '404':
          $ref: '#/components/responses/Unauthorized'
    put:
      tags:
        - Forms
      summary: Update forms
      description: Update an especific form
      operationId: formsUpdate
      parameters:
        - name: formId
          in: path
          description: Form id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Forms'
        description: Create a form
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Forms'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags:
        - Forms
      summary: Delete one form
      description: Delete one form
      operationId: formDelete
      parameters:
        - name: formId
          in: path
          description: Form id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
        '404':
          $ref: '#/components/responses/Unauthorized'
  /forms/task-types/:
    post:
      tags:
        - Forms and Task Type
      summary: Asociate forms to type of task
      description: Asociate forms to type of task
      operationId: formsTypeTask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idTask:
                  type: integer
                forms:
                  type: array
                  items:
                    type: object
                    properties:
                      idForm:
                        type: integer
                      isRequired:
                        type: boolean
                idUser:
                  type: string
              required:
                - idTask
                - forms
                - idUser
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      idTask:
                        type: integer
                      forms:
                        type: array
                        items:
                          type: object
                          properties:
                            idForm:
                              type: integer
                            isRequired:
                              type: boolean
                      idUser:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
  /forms/task-types/{idTask}:
    put:
      tags:
        - Forms and Task Type
      summary: Asociate forms to type of task
      description: Asociate forms to type of task
      operationId: formsEditTypeTask
      parameters:
        - name: idTask
          in: path
          description: Taks Id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                form:
                  type: object
                  properties:
                    idForm:
                      type: integer
                    isRequired:
                      type: boolean
                idUser:
                  type: string
              required:
                - forms
                - idUser
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      idTask:
                        type: integer
                      forms:
                        type: array
                        items:
                          type: object
                          properties:
                            idForm:
                              type: integer
                            isRequired:
                              type: boolean
                      idUser:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
    get:
      tags:
        - Forms and Task Type
      summary: Get all associate forms to type of task
      operationId: formsGetAllTypeTasks
      parameters:
        - name: idTask
          in: path
          description: Task id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      idTask:
                        type: integer
                      forms:
                        type: array
                        items:
                          type: object
                          properties:
                            idForm:
                              type: integer
                            isRequired:
                              type: boolean
                            nameForm:
                              type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
  /forms/task-types/{idTask}/{idForm}:
    delete:
      tags:
        - Forms and Task Type
      summary: Delete form from a Type Task
      operationId: formsDeleteTypeTask
      parameters:
        - name: idTask
          in: path
          description: Taks Id
          required: true
          schema:
            type: integer
            format: int64
        - name: idForm
          in: path
          description: Form id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /orders/type-task/:
    post:
      tags:
        - Orders and Task Type
      summary: Asociate order to type of task
      description: Asociate order to type of task
      operationId: ordersTypeTask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idTypeOrder:
                  type: integer
                tasks:
                  type: array
                  items:
                    type: object
                    properties:
                      idTask:
                        type: integer
                      status:
                        type: boolean
                idUser:
                  type: string
              required:
                - idTypeOrder
                - tasks
                - idUser
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      idTypeOrder:
                        type: integer
                      tasks:
                        type: array
                        items:
                          type: object
                          properties:
                            idTask:
                              type: integer
                            status:
                              type: boolean
                      idUser:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
  /orders/type-task/{idTypeOrder}:
    put:
      tags:
        - Orders and Task Type
      summary: Update order to type of task
      description: Update order to type of task
      operationId: ordersEditTypeTask
      parameters:
        - name: idTypeOrder
          in: path
          description: Order type Id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tasks:
                  type: object
                  properties:
                    idTask:
                      type: integer
                    status:
                      type: boolean
                idUser:
                  type: string
              required:
                - tasks
                - idUser
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      tasks:
                        type: array
                        items:
                          type: object
                          properties:
                            idTask:
                              type: integer
                            status:
                              type: boolean
                      idUser:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
    get:
      tags:
        - Orders and Task Type
      summary: Get all associate forms to type of task
      operationId: ordersGetAllTypeTasks
      parameters:
        - name: idTypeOrder
          in: path
          description: Order type task id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      idTypeOrder:
                        type: integer
                      tasks:
                        type: array
                        items:
                          type: object
                          properties:
                            idTask:
                              type: integer
                            status:
                              type: boolean
                            nameTask:
                              type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags:
        - Orders and Task Type
      summary: Delete orders by tasks Type
      operationId: ordersDeleteTypeTask
      parameters:
        - name: idTypeOrder
          in: path
          description: Order type taks Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /roles/{roleId}/permissions:
    get:
      tags:
        - Roles
      summary: Get permissions by role
      description: Get an array of permissions by an specific role
      operationId: OptionsByRole
      parameters:
        - name: roleId
          in: path
          description: Role id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Permissions'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /notifications/{notificationId}:
    get:
      tags:
        - Notifications
      summary: Notification specific
      description: Get information about a notification
      operationId: NotificationsByUserAndId
      parameters:
        - name: notificationId
          in: path
          description: Notification id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notifications'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /notifications/:
    put:
      tags:
        - Notifications
      summary: Add new notification for a user
      description: Add new notification for a user
      operationId: notificationAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notifications'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Notifications'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /dashBoard/{initDate}/{finalDate}:
    get:
      tags:
        - DashBoard
      summary: Information about orders
      description: Get information about orders in an specific range of dates
      operationId: GeneralDashboard
      parameters:
        - name: initDate
          in: path
          description: Init date
          required: true
          schema:
            type: string
            format: date-time
        - name: finalDate
          in: path
          description: Final date
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/GeneralOrdersInformation'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /customers/:
    post:
      tags:
        - Customers
      summary: Create new clients
      description: Create new clients
      operationId: clientsCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clients'
        description: Create a form
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Clients'
        '401':
          $ref: '#/components/responses/Unauthorized'
    get:
      tags:
        - Customers
      summary: List of clients
      operationId: clientsList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Clients'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /customers/{idCustomer}/:
    delete:
      tags:
        - Customers
      summary: Delete a client
      operationId: clientsDelete
      parameters:
        - name: idCustomer
          in: path
          description: CustomerId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
    get:
      tags:
        - Customers
      summary: Get an especific customer
      operationId: clientsById
      parameters:
        - name: idCustomer
          in: path
          description: CustomerId
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Clients'
        '401':
          $ref: '#/components/responses/Unauthorized'
    put:
      tags:
        - Customers
      summary: Update an especific customer
      operationId: clientUpdateById
      parameters:
        - name: idCustomer
          in: path
          description: CustomerId
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clients'
        description: Update a form
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Clients'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /operators/:
    get:
      tags:
        - Operators
      summary: List of all employess that being a operator
      operationId: operatorsList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Operators'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /zones/:
    get:
      tags:
        - Zones
      summary: List of divisions
      operationId: divisionsList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Areas'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /states/:
    get:
      tags:
        - States
      summary: List of states
      operationId: statesList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Status'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /operators/locations/:
    get:
      tags:
        - Operators
      summary: List of operator's locations
      operationId: locationsList
      parameters:
        - name: idCompany
          in: query
          description: Id de la compañia
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Locations'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /workflow/:
    get:
      tags:
        - Work Flows
      summary: N/A
      description: N/A
      operationId: workFlowList
      parameters:
        - name: dateType
          in: query
          description: N/A
          required: true
          schema:
            type: integer
        - name: startDate
          in: query
          description: Initial date
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Final date
          required: true
          schema:
            type: string
            format: date-time
        - name: idClient
          in: query
          description: Client identifier
          schema:
            type: integer
        - name: idOperator
          in: query
          description: Operator identifier
          schema:
            type: integer
        - name: idDivision
          in: query
          description: Operator identifier
          schema:
            type: integer
        - name: idState
          in: query
          description: State identifier
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/WorksFlow'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '407':
          $ref: '#/components/responses/TokenExpired'
        '408':
          $ref: '#/components/responses/LoginRequired'
components:
  responses:
    Unauthorized:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden acces
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resourse does not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    TokenExpired:
      description: Access token has expired
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    LoginRequired:
      description: Refresh token has expired, Shall login
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Locations:
      type: object
      description: Last operator's location
      required:
        - id
        - title
        - latitude
        - longitude
      properties:
        id:
          type: integer
        title:
          type: string
        latitude:
          type: integer
        longitude:
          type: integer
    WorksFlow:
      type: object
      description: N/A
      properties:
        id:
          type: integer
        name:
          type: string
        date:
          type: string
          format: date-time
        client:
          $ref: '#/components/schemas/Clients'
        operator:
          $ref: '#/components/schemas/Operators'
        zone:
          $ref: '#/components/schemas/Areas'
        state:
          $ref: '#/components/schemas/Status'
    # Divisions:
    #   type: object
    #   description: Company areas
    #   required:
    #     - id
    #     - name
    #   properties:
    #     id:
    #       type: integer
    #     name:
    #       type: string
    Operators:
      type: object
      description: Company operators
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
    Clients:
      type: object
      description: Company clients
      required:
        - id
        - nit
        - businessName
        - adress
        - phone
        - email
        - offices
      properties:
        id:
          type: integer
        nit:
          type: string
        businessName:
          type: string
        address:
          type: string
        country:
          type: string
          maxLength: 2
        city:
          type: integer
        phone:
          type: string
        email:
          type: string
        state:
          type: boolean
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ClientsContacts'
        offices:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              nit:
                type: string
              businessName:
                type: string
              address:
                type: string
              country:
                type: string
                maxLength: 2
              city:
                type: integer
              phone:
                type: string
              status:
                type: boolean
              contacts:
                type: array
                items:
                  $ref: '#/components/schemas/ClientsContacts'
    ClientsContacts:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        state:
          type: boolean
    GeneralOrdersInformation:
      type: object
      description: Resume orders by state [Report]
      required:
        - totalOrdersReport
        - processed
        - inProgress
        - queued
      properties:
        totalOrdersReport:
          type: integer
        processed:
          type: integer
        inProgress:
          type: integer
        queued:
          type: integer
    Notifications:
      type: object
      description: Notifications of the system
      required:
        - shortMessage
        - typeId
      properties:
        id:
          type: integer
        unRead:
          type: boolean
        typeId:
          type: integer
        shortMessage:
          type: string
        sentDate:
          type: string
          format: date-time
    Permissions:
      type: object
      description: System permissions
      properties:
        id:
          type: integer
        webType:
          type: boolean
          description: N/A
        level:
          type: integer
          description: N/A
        icon:
          type: string
          format: byte
          description: Base64 image
        label:
          type: string
        resourceAdress:
          type: string
          maxLength: 500
          description: N/A
        childrenArray:
          type: array
          description: N/A
          items:
            $ref: '#/components/schemas/Permissions'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    Rol:
      type: object
      description: System rol
      properties:
        id:
          type: integer
        name:
          type: string
    TrackInformation: #Todo esta QUEMADO
      type: object
      description: Params for track the user location
      properties:
        id:
          type: integer
          format: int64
        secondSendData:
          type: integer
        secondSendLocation:
          type: integer
        startJourney:
          type: boolean
          description: N/A
        gpsEnabled:
          type: boolean
          description: N/A
        timeSync:
          type: integer
          description: N/A
        phone:
          type: string
        version:
          type: string
        userStatus:
          type: integer
          format: int32
          description: User Status
    Acl:
      type: object
      description: Service acl
      properties:
        id:
          type: integer
          format: int64
        acl:
          type: string
        accesLevel:
          type: integer
    WorkOrder:
      type: object
      description: Work order
      required:
        - name
        - photoUrls
      properties:
        id:
          type: integer
          format: int64
        idSubOT: #QUEMADO
          type: integer
          description: Sub task id, id de la tarea asignada al usuario
        # idCreateMovil:
        #   type: integer
        #   description: N/A
        # isMovilCreate:
        #   type: integer
        #   description: N/A
        status:
          $ref: '#/components/schemas/Status'
        dateStart: #QUEMADO
          type: string
          format: date-full
          description: Fecha de ??
        dateEnd: #QUEMADO
          type: string
          format: date-full
          description: Fecha de ??
        datail: #QUEMADO
          type: string
          description: Detalle de la tarea
          # eliminar
        # labelOT:
        #   type: string
        #   description: N/A
        idTypeOT:
          type: integer
          description: id del Tipo de tarea
        typeOT:
          type: string
          description: Descripcion del tipo de tarea
        isPriority: #QUEMADO
          type: boolean
        # colour:
        #   type: string
        #   description: Color de ??
        area: #QUEMADO
          $ref: '#/components/schemas/Areas'
        place:
          $ref: '#/components/schemas/Places'
        priority: #QUEMADO
          $ref: '#/components/schemas/Priorities'
        # sla:
        #   $ref: '#/components/schemas/Slas'
        assets: #QUEMADO
          type: array
          items:
            $ref: '#/components/schemas/Assets'
        typesClosure:
          type: array
          items:
            $ref: '#/components/schemas/TypesClosure'
    TypesClosure:
      type: object
      description: Closing types for an issue
      properties:
        id:
          type: integer
          format: int64
        closure:
          type: string
        firm:
          type: string
        division:
          type: string
    Assets:
      type: object
      description: Stuff to repair
      properties:
        id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-full
        code:
          type: string
        name:
          type: string
        detail:
          type: string
        img:
          type: string
          format: uri
        readQR:
          type: boolean
        status:
          type: integer
    Slas:
      type: object
      description: SLA for service
      properties:
        id:
          type: integer
          format: int64
        timeMaxSla:
          type: integer
          format: int32
        alertTimeBeforeSla:
          type: integer
          format: int32
        colourSla:
          type: string
    Priorities:
      type: object
      description: Time notifications for an especific priority
      properties:
        id:
          type: integer
        priority:
          type: string
        alertTimeBefore:
          type: integer
          format: int32
        colourPriority:
          type: string
    Places:
      type: object
      description: Client ubication
      properties:
        id: #QUEMADO
          type: integer
        place:
          type: string
          description: Direccion
        email: #QUEMADO
          type: string
          format: email
          description: Email del jefe?
        emailcc: #QUEMADO
          type: string
          format: email
          description: Email del jefe?
        adress: #QUEMADO
          type: string
        latitude: #QUEMADO
          type: string
        longitude: #QUEMADO
          type: string
        department: #QUEMADO
          type: string
        city: #QUEMADO
          type: string
        client:
          $ref: '#/components/schemas/Clients'
    Areas:
      type: object
      description: Company areas, catalog
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
    Status:
      type: object
      description: States for work orders
      properties:
        id:
          type: integer
        name:
          type: string
    Catalog:
      type: object
      description: Generic data for all aplication
      properties:
        id:
          type: integer
        name:
          type: string
        abbreviation:
          type: string
        catalog_id:
          type: integer
          description: Father's id, 0 for new father catalog
    Forms:
      type: object
      description: Information to show a form
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        state:
          type: boolean
        sections:
          type: array
          items:
            $ref: '#/components/schemas/FormsSections'
    FormsSections:
      type: object
      description: Sections for a form
      properties:
        name:
          type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/FormsQuestions'
    FormsQuestions:
      type: object
      description: Form questions
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        type:
          type: string
        icon:
          type: string
        value:
          type: string
        conditions:
          type: array
          items:
            type: string
        invalidMessageKey:
          type: string
        isRequired:
          type: boolean
        source:
          $ref: '#/components/schemas/FormsQuestionsSources'
    FormsQuestionsSources:
      type: object
      properties:
        idTable:
          type: string
        nameSource:
          type: string
        values:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              abbreviation:
                type: string
              value:
                type: integer
              state:
                type: boolean
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
          description: It must be a label
        transaccionId:
          type: integer
        rowAffected:
          type: integer
        serverTime:
          type: string
          format: date-time
        data:
          type: object
      required:
        - status
        - serverTime
        - data
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
security:
  - api_key: []